; Generated by c86 (BYU-NASM) 5.1 (beta) from simptris_inth.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
gameOverISRC:
	; >>>>> Line:	11
	; >>>>> void gameOverISRC(void) { 
	jmp	L_simptris_inth_1
L_simptris_inth_2:
	; >>>>> Line:	12
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_simptris_inth_1:
	push	bp
	mov	bp, sp
	jmp	L_simptris_inth_2
	ALIGN	2
newPieceISRC:
	; >>>>> Line:	15
	; >>>>> void newPieceISRC(void) { 
	jmp	L_simptris_inth_4
L_simptris_inth_5:
	; >>>>> Line:	16
	; >>>>> YKSemPost(NPSemPtr); 
	push	word [NPSemPtr]
	call	YKSemPost
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_simptris_inth_4:
	push	bp
	mov	bp, sp
	jmp	L_simptris_inth_5
	ALIGN	2
receivedCommandISRC:
	; >>>>> Line:	19
	; >>>>> void receivedCommandISRC(void) { 
	jmp	L_simptris_inth_7
L_simptris_inth_8:
	; >>>>> Line:	20
	; >>>>> YKSemPost(RCSemPtr); 
	push	word [RCSemPtr]
	call	YKSemPost
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_simptris_inth_7:
	push	bp
	mov	bp, sp
	jmp	L_simptris_inth_8
	ALIGN	2
touchdownISRC:
	; >>>>> Line:	23
	; >>>>> void touchdownISRC(void) { 
	jmp	L_simptris_inth_10
L_simptris_inth_11:
	; >>>>> Line:	25
	; >>>>> } 
	mov	sp, bp
	pop	bp
	ret
L_simptris_inth_10:
	push	bp
	mov	bp, sp
	jmp	L_simptris_inth_11
	ALIGN	2
lineclearISRC:
	; >>>>> Line:	27
	; >>>>> void lineclearISRC(void) { 
	jmp	L_simptris_inth_13
L_simptris_inth_14:
	; >>>>> Line:	29
	; >>>>> } 
	mov	sp, bp
	pop	bp
	ret
L_simptris_inth_13:
	push	bp
	mov	bp, sp
	jmp	L_simptris_inth_14
